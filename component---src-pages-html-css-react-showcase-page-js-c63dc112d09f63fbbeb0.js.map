{"version":3,"sources":["webpack:///./src/pages/html-css-react-showcase-page.js","webpack:///./src/components/Seo/SeoHelmet.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/mock/projects/htmlCssAndReactProjectData.js","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["HtmlCssAndReactPage","React","createElement","Fragment","SEOHelmet","title","description","imageUrl","pageUrl","lang","ProjectShowcasePage","pageTitle","projectData","htmlCssAndReactData","_ref","Helmet","name","content","rel","href","property","TitlePages","text","className","style","flexGrow","onClick","goBackHandler","window","history","back","id","nanoid","img","info","info2","url","repo","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","pageDescription","setProjects","_toConsumableArray","PortfolioProvider","value","FooterPages","scrollToTop","scrollTo","top","behavior","aria-hidden"],"mappings":"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","file":"component---src-pages-html-css-react-showcase-page-js-c63dc112d09f63fbbeb0.js","sourcesContent":["import React from 'react';\nimport SEOHelmet from '../components/Seo/SeoHelmet';\nimport htmlCssAndReactData from '../mock/projects/htmlCssAndReactProjectData';\nimport ProjectShowcasePage from './ProjectShowcasePage';\n\n// const HtmlCssAndReactPage = () => {\n//   return (\n//     <ProjectShowcasePage\n//       pageTitle=\"let title = [ 'HTML', 'CSS', 'JavaScript', 'React' ]\"\n//       pageDescription=\"Collection of my HTML, CSS, JavaScript and React projects.\"\n//       projectData={htmlCssAndReactData}\n//     />\n//   );\n// };\n\nconst HtmlCssAndReactPage = () => {\n  return (\n    <>\n      <SEOHelmet\n        title=\"AB || HTML, CSS, JavaScript, React Projects\"\n        description=\"Collection of my HTML, CSS, JavaScript and React projects.\"\n        imageUrl=\"https://i.imgur.com/fnrZxXc.png\"\n        pageUrl=\"https://shcoobz.github.io/html-css-react-showcase-page/\"\n        lang=\"en\"\n      />\n\n      <ProjectShowcasePage\n        pageTitle=\"let title = [ 'HTML', 'CSS', 'JavaScript', 'React' ]\"\n        // pageDescription=\"Collection of my HTML, CSS, JavaScript and React projects.\"\n        projectData={htmlCssAndReactData}\n      />\n    </>\n  );\n};\n\nexport default HtmlCssAndReactPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst SEOHelmet = ({ title, description, imageUrl, pageUrl, lang }) => {\n  return (\n    <Helmet>\n      <html lang={lang || 'en'} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {/* Hardcoded Author Meta Tag */}\n      <meta name=\"author\" content=\"Agata Boeckmann\" />\n\n      {/* Favicon */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22 font-size=%2290%22>✌undefined</text></svg>\"\n      />\n\n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={imageUrl} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </Helmet>\n  );\n};\n\nSEOHelmet.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  pageUrl: PropTypes.string.isRequired,\n  lang: PropTypes.string,\n};\n\nexport default SEOHelmet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <div className=\"button-wrapper\">\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </div>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import { nanoid } from 'nanoid';\n\n// HTML AND CSS WITH REACT PROJECT DATA\nconst htmlCssAndReactData = [\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n\n  {\n    id: nanoid(),\n    img: 'react_country-fetching-app.png',\n    title: 'Country fetching App',\n    info: 'The Country Fetching App is a versatile web application that provides users with easy access to comprehensive information about countries worldwide. With features like dynamic search, sorting, and favoriting countries, it offers a seamless user experience for exploring diverse international data.',\n    info2: '',\n    url: 'https://shcoobz.github.io/Country-fetching-App/',\n    repo: 'https://github.com/Shcoobz/Country-fetching-App',\n  },\n\n  {\n    id: nanoid(),\n    img: 'react_country-fetching-app.png',\n    title: 'Country fetching App with Database',\n    info: 'This project is an extension of the Country fetching App where favorites are saved in a Mongo database instead.',\n    info2:\n      'Please note that this project includes a backend component that requires server-side processing, which Github Pages does not offer',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Country-fetching-App-with-Database',\n  },\n\n  {\n    id: nanoid(),\n    img: 'react_pokemon-battle.png',\n    title: 'Pokemon Battle',\n    info: 'This application allows you to embark on exciting Pokémon battles. Choose your location, select a starter Pokémon, and engage in battles. Win to catch the defeated Pokémon or try again if you lose.',\n    info2: '',\n    url: 'https://shcoobz.github.io/pokemon-battle/ ',\n    repo: 'https://github.com/Shcoobz/pokemon-battle',\n  },\n\n  {\n    id: nanoid(),\n    img: 'react_pizzeria-menu.png',\n    title: 'Pizzeria App',\n    info: 'The Pizza Order system is a streamlined solution for placing pizza orders, offering a user-friendly interface to select and customize pizzas with ease.',\n    info2:\n      'Please note that this project includes a backend component that requires server-side processing, which Github Pages does not offer.',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/pizza-order-prototype-javascript-ElinaVestere',\n  },\n\n  {\n    id: nanoid(),\n    img: 'react_tic-tac-toe.png',\n    title: 'Tic Tac Toe',\n    info: 'This application allows you to embark on exciting Pokémon battles. Choose your location, select a starter Pokémon, and engage in battles. Win to catch the defeated Pokémon or try again if you lose.',\n    info2: '',\n    url: 'https://shcoobz.github.io/tic-tac-toe/',\n    repo: 'https://github.com/Shcoobz/tic-tac-toe',\n  },\n];\n\nexport default htmlCssAndReactData;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"showcase-projects\">\n      <Container fluid>\n        <div className=\"showcase-project-wrapper\">\n          <Row className=\"showcase-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"showcase-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"showcase-project-container\">\n                      <div className=\"showcase-project-wrapper__image showcase-project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"showcase-project-wrapper__text\">\n                        <h3\n                          id=\"showcase-project-title\"\n                          className=\"showcase-project-wrapper__text-title\"\n                        >\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"showcase-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"showcase-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"showcase-button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <PortfolioProvider value={{ projects }}>\n      <TitlePages text={pageTitle} />\n      {pageDescription && <p className=\"page-description\">{pageDescription}</p>}\n      <ShowcaseProjects projects={projects} />\n      <FooterPages />\n    </PortfolioProvider>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nimport '../../style/pages/_footerPages.scss';\n\nconst FooterPages = () => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer-pages\">\n      <span className=\"back-to-top\" onClick={scrollToTop}>\n        <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n      </span>\n    </footer>\n  );\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}