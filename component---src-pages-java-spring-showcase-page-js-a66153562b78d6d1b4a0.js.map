{"version":3,"sources":["webpack:///./src/components/Seo/SeoHelmet.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/pages/java-spring-showcase-page.js","webpack:///./src/mock/projects/javaSpringProjectsData.js","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["SEOHelmet","_ref","title","description","imageUrl","pageUrl","lang","React","createElement","Helmet","name","content","rel","href","property","TitlePages","text","className","style","flexGrow","onClick","goBackHandler","window","history","back","JavaSpringPage","Fragment","ProjectShowcasePage","pageTitle","projectData","javaSpringData","id","nanoid","img","info","info2","url","repo","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","pageDescription","setProjects","_toConsumableArray","PortfolioProvider","value","FooterPages","scrollToTop","scrollTo","top","behavior","aria-hidden"],"mappings":"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","file":"component---src-pages-java-spring-showcase-page-js-a66153562b78d6d1b4a0.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n// TODO: add publication date\n// * ++add it to all pages\n\nconst SEOHelmet = ({ title, description, imageUrl, pageUrl, lang }) => {\n  return (\n    <Helmet>\n      <html lang={lang || 'en'} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {/* Hardcoded Author Meta Tag */}\n      <meta name=\"author\" content=\"Agata Boeckmann\" />\n\n      {/* Favicon */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22 font-size=%2290%22>âœŒundefined</text></svg>\"\n      />\n\n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={imageUrl} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </Helmet>\n  );\n};\n\nSEOHelmet.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  pageUrl: PropTypes.string.isRequired,\n  lang: PropTypes.string,\n};\n\nexport default SEOHelmet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <div className=\"button-wrapper\">\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </div>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React from 'react';\nimport SEOHelmet from '../components/Seo/SeoHelmet';\nimport javaSpringData from '../mock/projects/javaSpringProjectsData';\nimport ProjectShowcasePage from './ProjectShowcasePage';\n\n// const JavaSpringPage = () => {\n//   return (\n//     <ProjectShowcasePage\n//       pageTitle=\"let title = [ 'OOP', 'Java', 'Spring' ]\"\n//       pageDescription=\"Collection of my Java with Spring projects.\"\n//       projectData={javaSpringData}\n//     />\n//   );\n// };\n\nconst JavaSpringPage = () => {\n  return (\n    <>\n      <SEOHelmet\n        title=\"AB || OOP, Java, Spring Projects\"\n        description=\"Collection of my Java Spring projects.\"\n        imageUrl=\"https://i.imgur.com/Rd9C7QG.png\"\n        pageUrl=\"https://shcoobz.github.io//java-spring-showcase-page/\"\n        lang=\"en\"\n      />\n\n      <ProjectShowcasePage\n        pageTitle=\"let title = [ 'OOP', 'Java', 'Spring' ]\"\n        // pageDescription=\"Collection of my Java Spring projects.\"\n        projectData={javaSpringData}\n      />\n    </>\n  );\n};\n\nexport default JavaSpringPage;\n","import { nanoid } from 'nanoid';\n\n// JAVA SPRING PROJECTS\nconst javaSpringData = [\n  {\n    id: nanoid(),\n    img: 'quote-generator.png',\n    title: 'Quote Generator',\n    info: 'This was one of my first projects. It is a single-page web application that retrieves random quotes from an API and allows users to share them on Twitter.',\n    info2: '',\n    url: 'https://shcoobz.github.io/quote-generator/',\n    repo: 'https://github.com/Shcoobz/quote-generator',\n  },\n  {\n    id: nanoid(),\n    img: 'infinity-scroll.png',\n    title: 'Infinity Scroll',\n    info: 'This web application uses the Unsplash API to provide an infinite scroll of random images. As the user scrolls down, it continuously loads more images for an endless visual experience.',\n    info2: '',\n    url: 'https://shcoobz.github.io/infinite-scroll/',\n    repo: 'https://github.com/Shcoobz/infinite-scroll',\n  },\n  {\n    id: nanoid(),\n    img: 'picture-in-picture.png',\n    title: 'Picture in picture',\n    info: 'This web application is an interactive tool designed to create a user-friendly interface where users can play a video in Picture in Picture mode, allowing them to watch video content while interacting with other applications or websites.',\n    info2: '',\n    url: 'https://shcoobz.github.io/picture-in-picture/',\n    repo: 'https://github.com/Shcoobz/picture-in-picture',\n  },\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n];\n\nexport default javaSpringData;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"showcase-projects\">\n      <Container fluid>\n        <div className=\"showcase-project-wrapper\">\n          <Row className=\"showcase-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"showcase-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"showcase-project-container\">\n                      <div className=\"showcase-project-wrapper__image showcase-project-wrapper__multi\">\n                        <a\n                          href={url || repo || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"showcase-project-wrapper__text\">\n                        <h3\n                          id=\"showcase-project-title\"\n                          className=\"showcase-project-wrapper__text-title\"\n                        >\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"showcase-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"showcase-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"showcase-button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <PortfolioProvider value={{ projects }}>\n      <TitlePages text={pageTitle} />\n      {pageDescription && <p className=\"page-description\">{pageDescription}</p>}\n      <ShowcaseProjects projects={projects} />\n      <FooterPages />\n    </PortfolioProvider>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nimport '../../style/pages/_footerPages.scss';\n\nconst FooterPages = () => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer-pages\">\n      <span className=\"back-to-top\" onClick={scrollToTop}>\n        <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n      </span>\n    </footer>\n  );\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}