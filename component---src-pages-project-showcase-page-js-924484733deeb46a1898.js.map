{"version":3,"sources":["webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/components/Seo/Seo.js","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["TitlePages","_ref","text","React","createElement","className","style","flexGrow","href","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","title","info","info2","url","repo","img","id","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","rel","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","SEO","description","lang","meta","defaultTitle","defaultDescription","defaultLang","Helmet","htmlAttributes","name","content","property","concat","_toConsumableArray","ProjectShowcasePage","pageTitle","pageDescription","projectData","setProjects","Fragment","PortfolioProvider","value","FooterPages","scrollToTop","scrollTo","top","behavior","aria-hidden"],"mappings":"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","file":"component---src-pages-project-showcase-page-js-924484733deeb46a1898.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <div className=\"button-wrapper\">\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </div>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"showcase-projects\">\n      <Container fluid>\n        <div className=\"showcase-project-wrapper\">\n          <Row className=\"showcase-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"showcase-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"showcase-project-container\">\n                      <div className=\"showcase-project-wrapper__image showcase-project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"showcase-project-wrapper__text\">\n                        <h3\n                          id=\"showcase-project-title\"\n                          className=\"showcase-project-wrapper__text-title\"\n                        >\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"showcase-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"showcase-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"showcase-button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","// src/components/SEO.js\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst SEO = ({ title, description, lang, meta = [] }) => {\n  const defaultTitle = title || 'AB | Full Stack Developer';\n  const defaultDescription = description || 'Welcome to my project portfolio!';\n  const defaultLang = lang || 'en';\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang: defaultLang }}\n      title={defaultTitle}\n      meta={[\n        {\n          name: 'description',\n          content: defaultDescription,\n        },\n        {\n          property: 'og:title',\n          content: defaultTitle,\n        },\n        {\n          property: 'og:description',\n          content: defaultDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        ...meta,\n      ]}\n    >\n      {/* Additional elements like link tags can also be included here */}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\nimport SEO from '../components/Seo/Seo';\n\n// const ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n//   const [projects, setProjects] = useState([]);\n\n//   useEffect(() => {\n//     setProjects([...projectData]);\n//   }, [projectData]);\n\n//   return (\n//     <>\n//       <Helmet>\n//         <meta charSet=\"utf-8\" />\n//         <html lang=\"en\" />\n//         <meta name=\"description\" content={pageDescription} />\n//       </Helmet>\n//       <PortfolioProvider value={{ projects }}>\n//         <TitlePages text={pageTitle} />\n//         <ShowcaseProjects projects={projects} />\n//         <FooterPages />\n//       </PortfolioProvider>\n//     </>\n//   );\n// };\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <>\n      <SEO title={pageTitle} description={pageDescription} lang=\"en\" />\n      <PortfolioProvider value={{ projects }}>\n        <TitlePages text={pageTitle} />\n        <ShowcaseProjects projects={projects} />\n        <FooterPages />\n      </PortfolioProvider>\n    </>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nimport '../../style/pages/_footerPages.scss';\n\nconst FooterPages = () => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer-pages\">\n      <span className=\"back-to-top\" onClick={scrollToTop}>\n        <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n      </span>\n    </footer>\n  );\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}