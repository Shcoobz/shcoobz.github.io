{"version":3,"sources":["webpack:///./src/pages/showcase/basicJava.js","webpack:///./src/components/Seo/SeoHelmet.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx","webpack:///./src/mock/projects/basicJavaData.js"],"names":["OopWithJavaPage","React","createElement","Fragment","SEOHelmet","title","description","imageUrl","pageUrl","lang","ProjectShowcasePage","pageTitle","projectData","advancedJavaData","_ref","Helmet","name","content","rel","href","type","property","TitlePages","text","className","style","flexGrow","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","info","info2","url","repo","img","id","imageLink","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","pageDescription","setProjects","_toConsumableArray","PortfolioProvider","value","FooterPages","scrollToTop","scrollTo","top","behavior","aria-hidden","basicJavaData","nanoid"],"mappings":"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","file":"component---src-pages-showcase-basic-java-js-2adfa8cd227d34f243a8.js","sourcesContent":["import React from 'react';\nimport SEOHelmet from '../../components/Seo/SeoHelmet';\nimport advancedJavaData from '../../mock/projects/basicJavaData';\nimport ProjectShowcasePage from '../ProjectShowcasePage';\n\n// const OopWithJavaPage = () => {\n//   return (\n//     <ProjectShowcasePage\n//       pageTitle=\"let title = [ 'OOP', 'Java' ]\"\n//       pageDescription=\"Collection of my basic Java projects.\"\n//       projectData={oopWithJavaData}\n//     />\n//   );\n// };\n\nconst OopWithJavaPage = () => {\n  return (\n    <>\n      <SEOHelmet\n        title=\"AB || OOP with Java Projects\"\n        description=\"Collection of my basic Java projects.\"\n        imageUrl=\"https://i.imgur.com/IJXWtT6.png\"\n        pageUrl=\"https://shcoobz.github.io/oop-with-java-showcase-page/\"\n        lang=\"en\"\n      />\n\n      <ProjectShowcasePage\n        pageTitle=\"let title = [ 'OOP', 'Java' ]\"\n        // pageDescription=\"Collection of my basic Java projects.\"\n        projectData={advancedJavaData}\n      />\n    </>\n  );\n};\n\nexport default OopWithJavaPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n// TODO: add publication date\n// * ++add it to all pages\n\nconst SEOHelmet = ({ title, description, imageUrl, pageUrl, lang }) => {\n  return (\n    <Helmet>\n      <html lang={lang || 'en'} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {/* Hardcoded Author Meta Tag */}\n      <meta name=\"author\" content=\"Agata Boeckmann\" />\n\n      {/* Favicon */}\n      <link rel=\"icon\" href=\"src/images/favicon.png\" type=\"image/png\" />\n\n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={imageUrl} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </Helmet>\n  );\n};\n\nSEOHelmet.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  pageUrl: PropTypes.string.isRequired,\n  lang: PropTypes.string,\n};\n\nexport default SEOHelmet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <div className=\"button-wrapper\">\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </div>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"showcase-projects\">\n      <Container fluid>\n        <div className=\"showcase-project-wrapper\">\n          <Row className=\"showcase-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              const imageLink = url || repo;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"showcase-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"showcase-project-container\">\n                      <div className=\"showcase-project-wrapper__image showcase-project-wrapper__multi\">\n                        <a\n                          href={imageLink || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"showcase-project-wrapper__text\">\n                        <h3\n                          id=\"showcase-project-title\"\n                          className=\"showcase-project-wrapper__text-title\"\n                        >\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"showcase-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"showcase-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"showcase-button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <PortfolioProvider value={{ projects }}>\n      <TitlePages text={pageTitle} />\n      {pageDescription && <p className=\"page-description\">{pageDescription}</p>}\n      <ShowcaseProjects projects={projects} />\n      <FooterPages />\n    </PortfolioProvider>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nimport '../../style/pages/_footerPages.scss';\n\nconst FooterPages = () => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer-pages\">\n      <span className=\"back-to-top\" onClick={scrollToTop}>\n        <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n      </span>\n    </footer>\n  );\n};\n\nexport default FooterPages;\n","import { nanoid } from 'nanoid';\n\n// OOP WITH JAVA PROJECTS\nconst basicJavaData = [\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_code-breaker.png',\n    title: 'CodeBreaker',\n    info: 'This interactive tool allows users to encrypt and decrypt messages using popular ciphers like the Caesar Cipher and Vigenere Cipher.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/CodeBreaker-Cipher-App',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_byte-sized-bakes.png',\n    title: 'Byte-sized Bakes',\n    info: 'This project is about managing a cake shop. It simulates the process of ordering different types of cakes with various flavors, calculating the cost, and managing orders.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Byte-sized-Bakes',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_vehicle-vault.png',\n    title: 'Vehicle Vault',\n    info: 'This application provides a realistic simulation of a parking garage management system. It features a user-friendly interface for processing vehicle reservations, managing parking spots, and handling different types of vehicles such as cars and trucks.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Vehicle-Vault',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_post-master.png',\n    title: 'Post Master',\n    info: 'This application simulates the operations of a postal office, providing an interactive way to manage and track postal items. It features a user-friendly interface, efficient item processing, and detailed financial tracking.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Post-Master',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_bite-bistro.png',\n    title: 'Bite Bistro',\n    info: 'This application provides a simulated environment for managing a restaurant. It features a user-friendly interface for order handling, including drinks and sandwiches, and showcases a simple yet effective system for calculating total sales and displaying order details.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Bite-Bistro',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_mighty-text-adventure.png',\n    title: 'TEAMWORK: Mighty Text Adventure',\n    info: 'This project is a text-based role-playing game set in a magical realm. Players navigate through various areas, encounter enemies, and engage in battles, all through text-based commands.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/mighty-text-adventure-java-Shcoobz',\n  },\n\n  {\n    id: nanoid(),\n    img: 'basicJava_ehotel-buffet.png',\n    title: 'TEAMWORK: eHotel Buffet',\n    info: 'A sophisticated application designed to manage the buffet services in a hotel setting, focusing primarily on breakfast. It streamlines the guest dining experience, meal preparation, and waste management through an intuitive interface. ',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/ehotel-buffet-java-AdrianMonemi',\n  },\n];\n\nexport default basicJavaData;\n"],"sourceRoot":""}