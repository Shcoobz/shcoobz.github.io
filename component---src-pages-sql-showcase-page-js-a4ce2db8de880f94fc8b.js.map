{"version":3,"sources":["webpack:///./src/pages/sql-showcase-page.js","webpack:///./src/mock/projects/sqlProjectData.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["SqlProjectsPage","React","createElement","ProjectShowcasePage","pageTitle","pageDescription","projectData","sqlProjectData","id","nanoid","img","title","info","info2","url","repo","TitlePages","_ref","text","className","style","flexGrow","href","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","rel","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","setProjects","_toConsumableArray","Fragment","Helmet","charSet","lang","name","content","PortfolioProvider","value","FooterPages"],"mappings":"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","file":"component---src-pages-sql-showcase-page-js-a4ce2db8de880f94fc8b.js","sourcesContent":["import React from 'react';\nimport sqlProjectData from '../mock/projects/sqlProjectData';\nimport ProjectShowcasePage from './ProjectShowcasePage';\n\nconst SqlProjectsPage = () => {\n  return (\n    <ProjectShowcasePage\n      pageTitle=\"let title = [ SQL ]\"\n      pageDescription=\"Collection of my basic SQL queries.\"\n      projectData={sqlProjectData}\n    />\n  );\n};\n\nexport default SqlProjectsPage;\n","import { nanoid } from 'nanoid';\n\n// SQL DATA\nconst sqlProjectData = [\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n\n  {\n    id: nanoid(),\n    img: 'sql_basic-db.png',\n    title: 'Basic SQL DB',\n    info: 'Using a very short database I solve very basic SQL queries.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/basic-sql',\n  },\n\n  {\n    id: nanoid(),\n    img: 'sql_basic-queries.png',\n    title: 'Northwind DB: Simple SQL Queries',\n    info: 'This project involves solving a series of SQL queries to extract specific information from the Northwind database.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/northwind-traders-select-sql-Shcoobz',\n  },\n\n  {\n    id: nanoid(),\n    img: 'sql_advanced-queries.png',\n    title: 'Northwind DB: Advanced SQL Queries',\n    info: 'Using the same database as before I write advanced SQL queries.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/northwind-traders-join-sql-Shcoobz',\n  },\n];\n\nexport default sqlProjectData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <span>\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </span>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"multi-projects\">\n      <Container fluid>\n        <div className=\"project-wrapper\">\n          <Row className=\"multi-projects-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"multi-projects-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"project-container\">\n                      <div className=\"project-wrapper__image project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"project-wrapper__text\">\n                        <h3 id=\"multi-projects-title\" className=\"project-wrapper__text-title\">\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"multi-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"multi-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <html lang=\"en\" />\n        <meta name=\"description\" content={pageDescription} />\n      </Helmet>\n      <PortfolioProvider value={{ projects }}>\n        <TitlePages text={pageTitle} />\n        <ShowcaseProjects projects={projects} />\n        <FooterPages />\n      </PortfolioProvider>\n    </>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nconst FooterPages = () => {\n  return <footer className=\"footer-pages\" />;\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}