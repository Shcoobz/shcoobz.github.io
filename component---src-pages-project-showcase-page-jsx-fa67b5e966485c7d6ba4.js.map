{"version":3,"sources":["webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.jsx","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["TitlePages","_ref","text","React","createElement","className","style","flexGrow","href","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","title","info","info2","url","repo","img","id","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","rel","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","ProjectShowcasePage","pageTitle","pageDescription","projectData","setProjects","_toConsumableArray","Fragment","Helmet","charSet","lang","name","content","PortfolioProvider","value","FooterPages"],"mappings":"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","file":"component---src-pages-project-showcase-page-jsx-fa67b5e966485c7d6ba4.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <span>\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </span>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"multi-projects\">\n      <Container fluid>\n        <div className=\"project-wrapper\">\n          <Row className=\"multi-projects-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"multi-projects-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"project-container\">\n                      <div className=\"project-wrapper__image project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"project-wrapper__text\">\n                        <h3 id=\"multi-projects-title\" className=\"project-wrapper__text-title\">\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"multi-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"multi-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <html lang=\"en\" />\n        <meta name=\"description\" content={pageDescription} />\n      </Helmet>\n      <PortfolioProvider value={{ projects }}>\n        <TitlePages text={pageTitle} />\n        <ShowcaseProjects projects={projects} />\n        <FooterPages />\n      </PortfolioProvider>\n    </>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nconst FooterPages = () => {\n  return <footer className=\"footer-pages\" />;\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}