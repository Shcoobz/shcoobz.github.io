{"version":3,"sources":["webpack:///./src/pages/sql-showcase-page.js","webpack:///./src/mock/projects/sqlProjectData.js","webpack:///./src/components/Seo/SeoHelmet.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["SqlProjectsPage","React","createElement","Fragment","SEOHelmet","title","description","imageUrl","pageUrl","lang","ProjectShowcasePage","pageTitle","pageDescription","projectData","sqlProjectData","id","nanoid","img","info","info2","url","repo","_ref","Helmet","name","content","rel","href","property","TitlePages","text","className","style","flexGrow","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","setProjects","_toConsumableArray","PortfolioProvider","value","FooterPages","scrollToTop","scrollTo","top","behavior","aria-hidden"],"mappings":"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","file":"component---src-pages-sql-showcase-page-js-30940a73a0b5c3f816c8.js","sourcesContent":["import React from 'react';\nimport SEOHelmet from '../components/Seo/SeoHelmet';\nimport sqlProjectData from '../mock/projects/sqlProjectData';\nimport ProjectShowcasePage from './ProjectShowcasePage';\n\n// const SqlProjectsPage = () => {\n//   return (\n//     <ProjectShowcasePage\n//       pageTitle=\"let title = [ SQL ]\"\n//       pageDescription=\"Collection of my basic SQL queries.\"\n//       projectData={sqlProjectData}\n//     />\n//   );\n// };\n\nconst SqlProjectsPage = () => {\n  return (\n    <>\n      <SEOHelmet\n        title=\"SQL Projects\"\n        description=\"Collection of my basic SQL queries.\"\n        imageUrl=\"https://i.imgur.com/5Di9Qm3.png\"\n        pageUrl=\"https://shcoobz.github.io/sql-showcase-page/\"\n        lang=\"en\"\n      />\n\n      <ProjectShowcasePage\n        pageTitle=\"let title = [ SQL ]\"\n        pageDescription=\"Collection of my basic SQL queries.\"\n        projectData={sqlProjectData}\n      />\n    </>\n  );\n};\n\nexport default SqlProjectsPage;\n","import { nanoid } from 'nanoid';\n\n// SQL DATA\nconst sqlProjectData = [\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n\n  {\n    id: nanoid(),\n    img: 'sql_basic-db.png',\n    title: 'Basic SQL DB',\n    info: 'Using a very short database I solve very basic SQL queries.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/basic-sql',\n  },\n\n  {\n    id: nanoid(),\n    img: 'sql_basic-queries.png',\n    title: 'Northwind DB: Simple SQL Queries',\n    info: 'This project involves solving a series of SQL queries to extract specific information from the Northwind database.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/northwind-traders-select-sql-Shcoobz',\n  },\n\n  {\n    id: nanoid(),\n    img: 'sql_advanced-queries.png',\n    title: 'Northwind DB: Advanced SQL Queries',\n    info: 'Using the same database as before I write advanced SQL queries.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/northwind-traders-join-sql-Shcoobz',\n  },\n];\n\nexport default sqlProjectData;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst SEOHelmet = ({ title, description, imageUrl, pageUrl, lang }) => {\n  return (\n    <Helmet>\n      <html lang={lang || 'en'} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {/* Hardcoded Author Meta Tag */}\n      <meta name=\"author\" content=\"Agata Boeckmann\" />\n\n      {/* Favicon */}\n      <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22 font-size=%2290%22>âœŒundefined</text></svg>\"\n      />\n\n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={imageUrl} />\n      <meta property=\"og:url\" content={pageUrl} />\n    </Helmet>\n  );\n};\n\nSEOHelmet.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  pageUrl: PropTypes.string.isRequired,\n  lang: PropTypes.string,\n};\n\nexport default SEOHelmet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <div className=\"button-wrapper\">\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </div>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"showcase-projects\">\n      <Container fluid>\n        <div className=\"showcase-project-wrapper\">\n          <Row className=\"showcase-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"showcase-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"showcase-project-container\">\n                      <div className=\"showcase-project-wrapper__image showcase-project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"showcase-project-wrapper__text\">\n                        <h3\n                          id=\"showcase-project-title\"\n                          className=\"showcase-project-wrapper__text-title\"\n                        >\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"showcase-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"showcase-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"showcase-button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <PortfolioProvider value={{ projects }}>\n      <TitlePages text={pageTitle} />\n      {pageDescription && <p className=\"page-description\">{pageDescription}</p>}\n      <ShowcaseProjects projects={projects} />\n      <FooterPages />\n    </PortfolioProvider>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import React from 'react';\n\nimport '../../style/pages/_footerPages.scss';\n\nconst FooterPages = () => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"footer-pages\">\n      <span className=\"back-to-top\" onClick={scrollToTop}>\n        <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n      </span>\n    </footer>\n  );\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}