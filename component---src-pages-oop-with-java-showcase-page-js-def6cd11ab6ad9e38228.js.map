{"version":3,"sources":["webpack:///./src/pages/oop-with-java-showcase-page.js","webpack:///./src/components/Title/TitlePages.jsx","webpack:///./src/components/Projects/ShowcaseProjects.jsx","webpack:///./src/pages/ProjectShowcasePage.jsx","webpack:///./src/mock/placeholderProject.js","webpack:///./src/mock/projects/oopWithJavaProjectsData.js","webpack:///./src/components/Footer/FooterPages.jsx"],"names":["OopWithJavaPage","React","createElement","ProjectShowcasePage","pageTitle","pageDescription","projectData","oopWithJavaData","TitlePages","_ref","text","className","style","flexGrow","href","onClick","goBackHandler","window","history","back","ShowcaseProjects","projects","isDesktop","setIsDesktop","useState","isMobile","setIsMobile","useEffect","innerWidth","Container","fluid","Row","map","project","title","info","info2","url","repo","img","id","Col","lg","sm","key","Fade","bottom","duration","delay","distance","target","aria-label","rel","Tilt","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","ProjectImg","alt","filename","Link","to","setProjects","_toConsumableArray","Fragment","Helmet","charSet","lang","name","content","PortfolioProvider","value","FooterPages","placeholderProject","nanoid","subtitle"],"mappings":"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","file":"component---src-pages-oop-with-java-showcase-page-js-def6cd11ab6ad9e38228.js","sourcesContent":["import React from 'react';\nimport oopWithJavaData from '../mock/projects/oopWithJavaProjectsData';\nimport ProjectShowcasePage from './ProjectShowcasePage';\n\nconst OopWithJavaPage = () => {\n  return (\n    <ProjectShowcasePage\n      pageTitle=\"let title = [ 'OOP', 'Java' ]\"\n      pageDescription=\"Collection of my basic Java projects.\"\n      projectData={oopWithJavaData}\n    />\n  );\n};\n\nexport default OopWithJavaPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitlePages = ({ text }) => {\n  const goBackHandler = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"title-pages\">\n      <div className=\"title-text-wrapper\" style={{ flexGrow: 1 }}>\n        <h1 className=\"title-pages-text\">{text}</h1>\n      </div>\n      <span>\n        <a href=\"#\" onClick={goBackHandler} className=\"cta-btn cta-btn--back\">\n          Back\n        </a>\n      </span>\n    </div>\n  );\n};\n\nTitlePages.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TitlePages;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProjectImg from '../Image/ProjectImg';\nimport '../../style/pages/_showcaseProjects.scss';\n\nconst ShowcaseProjects = ({ projects }) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section className=\"multi-projects\">\n      <Container fluid>\n        <div className=\"project-wrapper\">\n          <Row className=\"multi-projects-row\">\n            {projects.map((project) => {\n              const { title, info, info2, url, repo, img, id } = project;\n\n              return (\n                <Col lg={4} sm={12} key={id} className=\"multi-projects-col\">\n                  <Fade bottom duration={1000} delay={500} distance=\"30px\">\n                    <div className=\"project-container\">\n                      <div className=\"project-wrapper__image project-wrapper__multi\">\n                        <a\n                          href={url || '#!'}\n                          target=\"_blank\"\n                          aria-label=\"Project Link\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                            <div data-tilt className=\"thumbnail rounded\">\n                              <ProjectImg alt={title} filename={img} />\n                            </div>\n                          </Tilt>\n                        </a>\n                      </div>\n                      <div className=\"project-wrapper__text\">\n                        <h3 id=\"multi-projects-title\" className=\"project-wrapper__text-title\">\n                          {title || 'Project Title'}\n                        </h3>\n                        <div>\n                          <p className=\"multi-projects-info\">\n                            {info || 'Project description here...'}\n                          </p>\n                          <p className=\"multi-projects-info2\">{info2 || ''}</p>\n                        </div>\n                        <div className=\"button-container\">\n                          {url && (\n                            <Link\n                              to={url}\n                              className=\"cta-btn cta-btn--hero\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              See Live\n                            </Link>\n                          )}\n\n                          {repo && (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"cta-btn text-color-main\"\n                              href={repo}\n                            >\n                              Source Code\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </Fade>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nShowcaseProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string,\n      info2: PropTypes.string,\n      url: PropTypes.string,\n      repo: PropTypes.string,\n      img: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ShowcaseProjects;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\nimport ShowcaseProjects from '../components/Projects/ShowcaseProjects';\nimport { PortfolioProvider } from '../context/context';\nimport TitlePages from '../components/Title/TitlePages';\nimport FooterPages from '../components/Footer/FooterPages';\n\nconst ProjectShowcasePage = ({ pageTitle, pageDescription, projectData }) => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects([...projectData]);\n  }, [projectData]);\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <html lang=\"en\" />\n        <meta name=\"description\" content={pageDescription} />\n      </Helmet>\n      <PortfolioProvider value={{ projects }}>\n        <TitlePages text={pageTitle} />\n        <ShowcaseProjects projects={projects} />\n        <FooterPages />\n      </PortfolioProvider>\n    </>\n  );\n};\n\nProjectShowcasePage.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n  projectData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      info: PropTypes.string.isRequired,\n      info2: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      repo: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ProjectShowcasePage;\n","import { nanoid } from 'nanoid';\n\nconst placeholderProject = {\n  id: nanoid(),\n  img: 'placeholder.png',\n  title: ' ',\n  subtitle: ' ',\n  info: ' ',\n  info2: ' ',\n  url: '',\n  repo: '',\n};\n\nexport default placeholderProject;\n","import { nanoid } from 'nanoid';\n\nimport placeholderProject from '../placeholderProject';\n\n// OOP WITH JAVA PROJECTS\nconst oopWithJavaData = [\n  {\n    id: nanoid(),\n    img: 'codebreaker.png',\n    title: 'CodeBreaker',\n    info: 'This interactive tool allows users to encrypt and decrypt messages using popular ciphers like the Caesar Cipher and Vigenere Cipher.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/CodeBreaker-Cipher-App',\n  },\n  {\n    id: nanoid(),\n    img: 'bytesizedbakes.png',\n    title: 'Byte-sized Bakes',\n    info: 'This project is about managing a cake shop. It simulates the process of ordering different types of cakes with various flavors, calculating the cost, and managing orders.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Byte-sized-Bakes',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'Vehicle Vault',\n    info: 'This application provides a realistic simulation of a parking garage management system. It features a user-friendly interface for processing vehicle reservations, managing parking spots, and handling different types of vehicles such as cars and trucks.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Vehicle-Vault',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'Post Master',\n    info: 'This application simulates the operations of a postal office, providing an interactive way to manage and track postal items. It features a user-friendly interface, efficient item processing, and detailed financial tracking.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Post-Master',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'Bite Bistro',\n    info: 'This application provides a simulated environment for managing a restaurant. It features a user-friendly interface for order handling, including drinks and sandwiches, and showcases a simple yet effective system for calculating total sales and displaying order details.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/Shcoobz/Bite-Bistro',\n  },\n\n  placeholderProject,\n\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'TEAMWORK: Mighty Text Adventure',\n    info: 'This project is a text-based role-playing game set in a magical realm. Players navigate through various areas, encounter enemies, and engage in battles, all through text-based commands.',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/mighty-text-adventure-java-Shcoobz',\n  },\n  {\n    id: nanoid(),\n    img: 'project.jpg',\n    title: 'TEAMWORK: eHotel Buffet',\n    info: 'A sophisticated application designed to manage the buffet services in a hotel setting, focusing primarily on breakfast. It streamlines the guest dining experience, meal preparation, and waste management through an intuitive interface. ',\n    info2: '',\n    url: '',\n    repo: 'https://github.com/CodecoolGlobal/ehotel-buffet-java-AdrianMonemi',\n  },\n  // {\n  //   id: nanoid(),\n  //   img: '',\n  //   title: '',\n  //   info: '',\n  //   info2: '',\n  //   url: '',\n  //   repo: '',\n  // },\n];\n\nexport default oopWithJavaData;\n","import React from 'react';\n\nconst FooterPages = () => {\n  return <footer className=\"footer-pages\" />;\n};\n\nexport default FooterPages;\n"],"sourceRoot":""}